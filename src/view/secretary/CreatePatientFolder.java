/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.secretary;

import dao.PatientFolderDao;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import model.PatientFolderModel;

/**
 *
 * @author bynan
 */
public class CreatePatientFolder extends javax.swing.JInternalFrame {

    /**
     * Creates new form CreatePatientFolder
     */
    public static int idPatientFolder;

    public CreatePatientFolder() {
        initComponents();
        this.setVisible(true);
        initBtnGroupGender();
        initDateOfBirth();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        dayComboBox = new javax.swing.JComboBox<>();
        monthComboBox = new javax.swing.JComboBox<>();
        yearComboBox = new javax.swing.JComboBox<>();
        mascRadioButton = new javax.swing.JRadioButton();
        femRadioButton = new javax.swing.JRadioButton();
        adressTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        listingButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Création d'un dossier patient");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Nom");

        jLabel3.setText("Prénom");

        jLabel4.setText("Date de naissance");

        jLabel5.setText("Genre");

        jLabel6.setText("Adresse");

        dayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mascRadioButton.setText("Masculin");

        femRadioButton.setText("Féminin");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        saveButton.setText("Enregistrer");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Réinitialiser");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        listingButton.setText("Voir la liste");
        listingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(listingButton)
                .addGap(18, 18, 18)
                .addComponent(resetButton)
                .addGap(18, 18, 18)
                .addComponent(saveButton)
                .addGap(95, 95, 95))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton)
                    .addComponent(saveButton)
                    .addComponent(listingButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mascRadioButton)
                                .addGap(38, 38, 38)
                                .addComponent(femRadioButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(firstNameTextField)
                            .addComponent(lastNameTextField)
                            .addComponent(adressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(mascRadioButton)
                    .addComponent(femRadioButton))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(adressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        titleLabel.setText("Formulaire de création d'un dossier patient");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        reset();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (saveButton.getText().equals("Modifier")) {
            try {
                updatePatient();
            } catch (SQLException ex) {
                Logger.getLogger(CreatePatientFolder.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (saveButton.getText().equals("Enregistrer")) {
            save();
        } else {
            System.err.println("Boutton non operationnel");
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void listingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listingButtonActionPerformed
        try {
            listing();
        } catch (SQLException ex) {
            Logger.getLogger(CreatePatientFolder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listingButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField adressTextField;
    public javax.swing.JComboBox<String> dayComboBox;
    public javax.swing.JRadioButton femRadioButton;
    public javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JTextField lastNameTextField;
    private javax.swing.JButton listingButton;
    public javax.swing.JRadioButton mascRadioButton;
    public javax.swing.JComboBox<String> monthComboBox;
    private javax.swing.JButton resetButton;
    public javax.swing.JButton saveButton;
    public javax.swing.JLabel titleLabel;
    public javax.swing.JComboBox<String> yearComboBox;
    // End of variables declaration//GEN-END:variables
    private final ButtonGroup btnGrp = new ButtonGroup();
    private final DefaultComboBoxModel comboModelDayBirth = new DefaultComboBoxModel();
    private final DefaultComboBoxModel comboModelMonthBirth = new DefaultComboBoxModel();
    private final DefaultComboBoxModel comboModelYearBirth = new DefaultComboBoxModel();

    private void initBtnGroupGender() {
        btnGrp.add(mascRadioButton);
        btnGrp.add(femRadioButton);
    }

    private void initDateOfBirth() {
        //generate day
        for (int i = 1; i <= 31; i++) {
            comboModelDayBirth.addElement(i);
        }
        this.dayComboBox.setModel(comboModelDayBirth);
        //generate month
        String[] months = new String[12];
        months[0] = "Janvier";
        months[1] = "Février";
        months[2] = "Mars";
        months[3] = "Avril";
        months[4] = "Mai";
        months[5] = "Juin";
        months[6] = "Juillet";
        months[7] = "Août";
        months[8] = "Septembre";
        months[9] = "Octobre";
        months[10] = "Novembre";
        months[11] = "Décembre";

        for (int j = 0; j < 12; j++) {
            comboModelMonthBirth.addElement(months[j]);
        }
        this.monthComboBox.setModel(comboModelMonthBirth);
        //generate year
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        for (int k = currentYear - 100; k <= currentYear; k++) {
            comboModelYearBirth.addElement(k);
        }
        this.yearComboBox.setModel(comboModelYearBirth);
    }

    private void reset() {
        firstNameTextField.setText("");
        lastNameTextField.setText("");
        adressTextField.setText("");
        btnGrp.clearSelection();
        dayComboBox.setSelectedIndex(0);
        monthComboBox.setSelectedIndex(0);
        yearComboBox.setSelectedIndex(0);
    }

    private void save() {
        String first_name = firstNameTextField.getText();
        String last_name = lastNameTextField.getText();
        var day = dayComboBox.getSelectedIndex() + 1;
        var month = monthComboBox.getSelectedIndex() + 1;
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        var year = yearComboBox.getSelectedIndex() + currentYear - 100;
        var dateOfBirth = day + "/" + month + "/" + year;
        String adress = adressTextField.getText();
        String gender = null;
        if (femRadioButton.isSelected()) {
            gender = "Féminin";
        } else if (mascRadioButton.isSelected()) {
            gender = "Masculin";
        }
        if (first_name.isBlank() || last_name.isBlank() || adress.isBlank()) {
            JOptionPane.showMessageDialog(null, "Champs non remplis!", "Erreur!", JOptionPane.ERROR_MESSAGE);
        } else {
            PatientFolderModel patientFolderModel = new PatientFolderModel();
            patientFolderModel.setFirst_name(first_name);
            patientFolderModel.setLast_name(last_name);
            patientFolderModel.setGender(gender);
            patientFolderModel.setBirth_date(dateOfBirth);
            patientFolderModel.setAdress(adress);
            PatientFolderDao patientFolderDao = new PatientFolderDao();
            patientFolderDao.addPatientFolder(patientFolderModel);
            reset();
            JOptionPane.showMessageDialog(null, "Succès!");

        }
    }

    private void listing() throws SQLException {
        ListPatientsFolder list = new ListPatientsFolder();
        JDesktopPane desktopPane = getDesktopPane();
        desktopPane.add(list);
        list.setVisible(true);
        this.setVisible(false);
        list.toFront();
    }

    private void updatePatient() throws SQLException {
        String first_name = firstNameTextField.getText();
        String last_name = lastNameTextField.getText();
        var day = dayComboBox.getSelectedIndex() + 1;
        var month = monthComboBox.getSelectedIndex() + 1;
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        var year = yearComboBox.getSelectedIndex() + currentYear - 100;
        var dateOfBirth = day + "/" + month + "/" + year;
        String adress = adressTextField.getText();
        String gender = null;
        if (femRadioButton.isSelected()) {
            gender = "Féminin";
        } else if (mascRadioButton.isSelected()) {
            gender = "Masculin";
        }
        if (first_name.isBlank() || last_name.isBlank() || adress.isBlank()) {
            JOptionPane.showMessageDialog(null, "Champs non remplis!", "Erreur!", JOptionPane.ERROR_MESSAGE);
        } else {
            PatientFolderModel patientFolderModel = new PatientFolderModel();
            patientFolderModel.setFirst_name(first_name);
            patientFolderModel.setLast_name(last_name);
            patientFolderModel.setGender(gender);
            patientFolderModel.setBirth_date(dateOfBirth);
            patientFolderModel.setAdress(adress);
            patientFolderModel.setId(idPatientFolder);
            System.err.println(idPatientFolder);
            PatientFolderDao patientFolderDao = new PatientFolderDao();
            patientFolderDao.updatePatientFolder(patientFolderModel);
            reset();
            JOptionPane.showMessageDialog(null, "Modification effectuee!");
            this.setVisible(false);
            // Show the list by default after inserting
            ListPatientsFolder list = new ListPatientsFolder();
            JDesktopPane desktopPane = getDesktopPane();
            desktopPane.add(list);
            list.setVisible(true);
            list.selectPatientUpdated();
           

        }
    }
}
